//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.14 at 03:51:18 PM CEST 
//


package com.github.lindenb.xml4ngs.entities;

import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;


public class Sample {

    protected PropertyMap properties=new PropertyMap();
    protected Sequences sequences=new Sequences();
    protected String name=null;

    /**
     * Gets the value of the properties property.
     * 
     * @return
     *     possible object is
     *     {@link PropertyMap }
     *     
     */
    public PropertyMap getProperties() {
        return properties;
    }

    /**
     * Sets the value of the properties property.
     * 
     * @param value
     *     allowed object is
     *     {@link PropertyMap }
     *     
     */
    public void setProperties(PropertyMap value) {
        this.properties = value;
    }

    /**
     * Gets the value of the sequences property.
     * 
     * @return
     *     possible object is
     *     {@link Sequences }
     *     
     */
    public Sequences getSequences() {
        return sequences;
    }

    /**
     * Sets the value of the sequences property.
     * 
     * @param value
     *     allowed object is
     *     {@link Sequences }
     *     
     */
    public void setSequences(Sequences value) {
        this.sequences = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }
    
  private Project owner;
  
  public Project getProject()
  	{
  	return this.owner;
  	}
  
  public void setProject(Project owner)
  	{
  	this.owner=owner;
  	}
  
  
  public void write(XMLStreamWriter w) throws XMLStreamException
	{
	 w.writeStartElement("sample");
	 w.writeAttribute("name", getName());
	if(getSequences()!=null) getSequences().write(w);
	 w.writeEndElement();
	}

  
  
    public void link()
  	{
  	if(this.sequences!=null)
  		{
	  	for(Pair o: this.sequences.getPair())
	  		{
	  		o.setSample(this);
	  		o.link();
	  		}
  		}
  	}
 
 
  @javax.xml.bind.annotation.XmlTransient
  public PropertyMap getPropertyMap()
  	{
	  PropertyMap p=new PropertyMap();
  	p.putAll(getProject().getPropertyMap());
  	if(properties!=null)
  		{
  		p.putAll(properties.getPropertyMap());
  		}
  	return p;
  	}
  
    public String getPropertyByName(String key,String def)
	  	{
	  	ProjectProperty v=getPropertyMap().get(key);
	  	if(v!=null && !(v instanceof PropertyString))
	  		{
	  		throw new IllegalArgumentException("not a string property :"+key);
	  		}
	  	return v==null?def:((PropertyString)v).getValue();
	  	}
  
  @Override
  public String toString()
  	{
  	return getName();
  	}
  
  
}
