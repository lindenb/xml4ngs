#if(${project.propertyMap.containsKey("contaminations.reference.path")})

LIST_PHONY_TARGET+= contaminations
TOP_TARGETS+=  contaminations

contaminations : $(OUTDIR)/CONTAMINATIONS/contaminations.tsv

$(OUTDIR)/CONTAMINATIONS/contaminations.tsv: #foreach($sample in $project.sample) #sample_contaminations_tsv(${sample}) #end

	cat $^ > $@


#foreach($sample in $project.sample)

#
# contaminations for sample ${sample.name}.
#

#sample_contaminations_tsv(${sample}) : #sample_final_bam(${sample})

	mkdir -p $(dir $@)
	@$(call timebegindb,$@,contaminations)
	@$(call sizedb,$<)
	$(SAMTOOLS) view -f 4   $< | awk -F '	' '{printf(">%s\n%s\n+\n%s\n",$$1,$$10,$$11);}' >  #sample_CONTAMINATIONS($sample)/tmp.fastq
	$(BWA) aln -f #sample_CONTAMINATIONS($sample)/tmp.sai ${project.propertyMap["contaminations.reference.path"]} #sample_CONTAMINATIONS($sample)/tmp.fastq 
	$(BWA) samse ${project.propertyMap["contaminations.reference.path"]} #sample_CONTAMINATIONS($sample)/tmp.sai  #sample_CONTAMINATIONS($sample)/tmp.fastq |\
		$(SAMTOOLS) view -F 4 -S - | cut -d '	' -f 3 | LC_ALL=C sort | uniq -c | awk -v S=${sample.name} '{printf("%s %s\n",S,$$0);}' | tr -s " " | tr " " "	" > $@
	rm -f #sample_CONTAMINATIONS($sample)/tmp.fastq #sample_CONTAMINATIONS($sample)/tmp.sai
	@$(call timeenddb,$@,contaminations)
	@$(call sizedb,$@)
	@$(call notempty,$@)
#end

#end
