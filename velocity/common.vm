#macro(output_files_prefix)${project.getPropertyByName("files.prefix","").trim()}#end
#macro(VARKIT_BEDDEDPTH $target $dependencies)

#
# coverage using varkit/beddepth
#
${target} : $(capture.bed)  $(call indexed_bam, ${dependencies} )
	@$(call timebegindb,$@,$@)
	mkdir -p $(dir $@)
	$(VARKIT)/beddepth  -D 0 -D 5 -D 10 -D 20 -D 30 -D 40 -D 50 \
		 -m $(MIN_MAPPING_QUALITY) $(foreach S,$(filter %.bam,$^),-f $(S) ) &lt; $< |\
		sed 's/_recal.bam//' |\
		gzip --best > $@
	@$(call timeendb,$@,$@)
	@$(call sizedb,$@)
	$(call notempty,$@)

#end

#macro(XCAPTURE_CHROM $chrom)$(OUTDIR)/BED/extended_capture.${chrom}.bed#end
#macro(MAKE_XCAPTURE_CHROM  $chrom)

#
# extended capture for chromosome ${chrom}
#

#XCAPTURE_CHROM($chrom):$(extended_capture_bed)
	mkdir -p $(dir $@)
	awk -F '	' -v C=${chrom} 'BEGIN{N=0;} {if(C!=$$1) next; print;N++;} END{if(N==0) printf("%s\t0\t1\tIGNORE_PLEASE\n",C);}' $< > $@

#end
