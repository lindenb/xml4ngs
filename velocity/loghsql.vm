#macro(HSQLDB_DEFS)


#if( $project.getPropertyByName("log.with.hsqldb","no")=="yes")

HSQLSTATS=$(OUTDIR)/HSQLDB/hsqldb.stats



CREATE_HSQLDB_DATABASE=create table if not exists begindb(file varchar(255) not null,category varchar(255) not null,w TIMESTAMP,CONSTRAINT K1 UNIQUE (file,category));create table if not exists enddb(file varchar(255) not null,category varchar(255) not null,w TIMESTAMP,CONSTRAINT K2 UNIQUE (file,category));create table if not exists sizedb(file varchar(255) not null,size BIGINT,CONSTRAINT K3 UNIQUE (file));

define timebegindb
	lockfile -r-1 $(LOCKFILE) && \
	mkdir -p $(dir $(HSQLSTATS)) && \
	${java_exe} -jar $(HSQLDB.sqltool) --autoCommit --inlineRc=url=jdbc:hsqldb:file:$(HSQLSTATS) --sql "$(CREATE_HSQLDB_DATABASE) delete from begindb where file='$(1)' and category='$(2)'; insert into begindb(file,category,w) values ('$(1)','$(2)',NOW);" && \
	rm -f $(LOCKFILE)
endef

define timeenddb
	lockfile -r-1 $(LOCKFILE) && \
	mkdir -p $(dir $(HSQLSTATS)) && \
	${java_exe} -jar ${HSQLDB.sqltool} --autoCommit --inlineRc=url=jdbc:hsqldb:file:$(HSQLSTATS) --sql "$(CREATE_HSQLDB_DATABASE) delete from enddb where file='$(1)' and category='$(2)'; insert into enddb(file,category,w) values ('$(1)','$(2)',NOW);" && \
	rm -f $(LOCKFILE)
endef


define sizedb
	mkdir -p $(dir $(HSQLSTATS)) && \
	stat -c "%s" $(1) | while read L; do lockfile -r-1 $(LOCKFILE); ${java_exe} -jar ${HSQLDB.sqltool} --autoCommit --inlineRc=url=jdbc:hsqldb:file:$(HSQLSTATS) --sql "$(CREATE_HSQLDB_DATABASE) delete from sizedb where file='$(1)'; insert into sizedb(file,size) values('$(1)','$$L');" && \
	rm -f $(LOCKFILE);done
endef

#else

TEXTSTATS=$(OUTDIR)/Statistics/make.statistics.txt

define timebegindb
	(mkdir -p $(dir $(TEXTSTATS)) && \
	(echo -n "BEGIN	$(1)	$(2)	" &&  date +"%Y-%m-%e %H-%M-%S") >> $(TEXTSTATS) )
endef

define timeenddb
	(mkdir -p $(dir $(TEXTSTATS)) && \
	(echo -n "END	$(1)	$(2)	" &&  date +"%Y-%m-%e %H-%M-%S") >> $(TEXTSTATS))
endef

define sizedb
	(mkdir -p $(dir $(TEXTSTATS)) && \
        if [ -f "$(1)" ]; then  (echo -n "SIZE	$(1)	" &&  stat -c "%s" $(1) ) >> $(TEXTSTATS) ; fi)
endef

#end

#end

#macro(HSQLDB_TARGETS)

#if( $project.getPropertyByName("log.with.hsqldb","no")=="yes")

##############################################################################
#
# statistics from HSQLDB
##############################################################################

LIST_PHONY_TARGET+= hsqldb_statistics 

TOP_TARGETS+= hsqldb_statistics 

hsqldb_statistics: $(OUTDIR)/durations.stats.txt $(OUTDIR)/filesize.stats.txt

$(OUTDIR)/durations.stats.txt:
	lockfile -r-1 $(LOCKFILE)
	mkdir -p $(dir $(HSQLSTATS) )
	-${java_exe} -jar ${HSQLDB.sqltool} --autoCommit --inlineRc=url=jdbc:hsqldb:file:$(HSQLSTATS) \
		--sql "select B.category$(foreach T,SECOND MINUTE HOUR DAY, ,AVG(TIMESTAMPDIFF(SQL_TSI_${T},B.W,E.W)) as duration_${T}) from begindb as B ,enddb as E where B.file=E.file group by B.category;" > $@
	rm -f $(LOCKFILE)

$(OUTDIR)/filesize.stats.txt:
	lockfile -r-1 $(LOCKFILE)
	mkdir -p $(dir $(HSQLSTATS) )
	-${java_exe} -jar ${HSQLDB.sqltool} --autoCommit --inlineRc=url=jdbc:hsqldb:file:$(HSQLSTATS) \
		--sql "select B.category,count(*) as N, AVG(L.size) as AVG_FILESIZE from begindb as B ,sizedb as L where B.file=L.file group by B.category;" > $@
	rm -f $(LOCKFILE)




##############################################################################
#
# list target(s) for which processing has been canceled or is still
# an ongoing process.
#
LIST_PHONY_TARGET+= ongoing

TOP_TARGETS+= ongoing

ongoing:
	lockfile -r-1 $(LOCKFILE)
	mkdir -p $(dir $(HSQLSTATS) )
	-${java_exe} -jar ${HSQLDB.sqltool} --autoCommit --inlineRc=url=jdbc:hsqldb:file:$(HSQLSTATS) \
		--sql "select B.file,B.w,E.file,E.w,B.category from begindb as B LEFT JOIN enddb as E on ( B.file=E.file and B.category=E.category ) where E.file is NULL or B.w >= E.w order by B.file ;" 
	rm -f $(LOCKFILE)	


#end

#end
